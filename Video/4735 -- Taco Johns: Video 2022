//*******************************	
// CID: 749	
// SID: 4735
// Last Updated: 2/15/2022	
//*******************************	




// Controller for Badge calculator
ifQ(1)
.answered()
.disappear(Q(1771), Q(1691), Q(1701), Q(1711), Q(1721), Q(1731), Q(1741), Q(1751), Q(1761)) // Curb Appeal
.disappear(Q(1861), Q(1871), Q(1881), Q(1891), Q(1901)) // Cleanliness 
.disappear(Q(1781), Q(1791), Q(1811), Q(1821), Q(1831), Q(1841), Q(1851)) // Order Taker Engagement
.disappear(Q(1681)) // Overall score for badges
.setValue(Q(1681), 0)




//*******************************
// CURB APPEAL - Begin
//*******************************

// If QID 901 is answered Option 1, then disappear and clear answer to QIDs.
ifQ(901)
.answered(1)
.disappear(Q(1191), Q(1201))
.clearAnswer(Q(1191), Q(1201));

// If QID 901 is answered Option 2, then disappear and clear answer to QIDs.
ifQ(901)
.answered(2)
.disappear(Q(1181), Q(1281), Q(1291), Q(1301))
.clearAnswer(Q(1181), Q(1281), Q(1291), Q(1301));

//*******************************
// CURB APPEAL - End
//*******************************




//*******************************
// INTERIOR ENVIRONMENT - Begin
//*******************************

// If QID 901 is answered Option 1, then disappear and clear answer to QIDs.
ifQ(901)
.answered(1)
.disappear(Q(1511))  // medium header
.disappear(Q(1361), Q(1501), Q(1521), Q(1591))
.clearAnswer(Q(1361), Q(1501), Q(1521), Q(1591));

// If QID 1591 is answered Option [0, 2, OR 3], then disappear and clear answer to QID 1601.
ifQ(1591)
.answered(0,2,3)
.disappear(Q(1601))
.clearAnswer(Q(1601));

//*******************************
// INTERIOR ENVIRONMENT  - End
//*******************************




//*******************************
// ORDER TAKER ENGAGEMENT - Begin
//*******************************

//------------------------------------
// Greeting Time Calc - Begin
//------------------------------------

// If QID 1211 and QID 1221 is answered anything, then trigger math operation: [1221] - [1211] = [1621]
ifQ(1211)
.answered()
.andQ(1221)
.answered()
.sub(Q(1221), Q(1211))
.store(Q(1621));

// If QID 1621 is <= 4 seconds, then set value to Option 1 to QID 1321.
ifQ(1621)
.lessThanOrEqual(4)
.setValue(Q(1321), 1);

// If QID 1621 is > 4 seconds, then set value to Option 2 to QID 1321.
ifQ(1621)
.greaterThan(4)
.setValue(Q(1321), 2);

//------------------------------------
// Greeting Time Calc - End
//------------------------------------

// If QID 901 is answered Option 2, then disappear and clear answer to QIDs.
ifQ(901)
.answered(2)
.disappear(Q(861), Q(871))
.clearAnswer(Q(861), Q(871));

// If QID 1561 is answered Option 2, then disappear and clear answer to QID 1571.
ifQ(1561)
.answered(2)
.disappear(Q(1571))
.clearAnswer(Q(1571));

// If QID 1571 is not answered Option 4, then disappear and clear answer to QID 891.
ifQ(1571)
.notAnswered(4)
.disappear(Q(891))
.clearAnswer(Q(891));

//*******************************
// ORDER TAKER ENGAGEMENT  - End
//*******************************




//*******************************
// SPEED - Begin
//*******************************

//------------------------------------
// Window Time Calc - Begin
//------------------------------------

// If QID 1341 and QID 1241 is answered anything, then trigger math operation: [1241] - [1341] = [1331]
ifQ(1341)
.answered()
.andQ(1241)
.answered()
.sub(Q(1241), Q(1341))
.store(Q(1331));

// If QID 1331 is < 1 min. 30 sec., then set value to Option 1 to QID 311.
ifQ(1331)
.lessThan(90)
.setValue(Q(311), 1);

// If QID 1331 is > 1 min. 30 sec. AND <= 1 min. 51 sec., then set value to Option 2 to QID 311.
ifQ(1331)
.greaterThan(90)
.lessThanOrEqual(111)
.setValue(Q(311), 2);

// If QID 1331 is > 1 min. 51 sec., then set value to Option 3 to QID 311.
ifQ(1331)
.greaterThan(111)
.setValue(Q(311), 3);

//------------------------------------
// Window Time Calc - End
//------------------------------------

//------------------------------------
// Line Time Calc - Begin
//------------------------------------

// If QID 1551 and QID 1241 is answered anything, then trigger math operation: [1241] - [1551] = [1251]
ifQ(1551)
.answered()
.andQ(1241)
.answered()
.sub(Q(1241), Q(1551))
.store(Q(1251));

// If QID 1251 is < 3 min. 30 sec., then set value to Option 1 to QID 341.
ifQ(1251)
.lessThan(210)
.setValue(Q(341), 1);

// If QID 1251 is > 3 min. 30 sec. AND <= 3 min. 51 sec., then set value to Option 2 to QID 341.
ifQ(1251)
.greaterThan(210)
.lessThanOrEqual(231)
.setValue(Q(341), 2);

// If QID 1251 is > 3 min. 51 sec., then set value to Option 3 to QID 341.
ifQ(1251)
.greaterThan(231)
.setValue(Q(341), 3);

//------------------------------------
// Line Time Calc - End
//------------------------------------

// If QID 901 is answered Option 2, then disappear and clear answer to QIDs.
ifQ(901)
.answered(2)
.disappear(Q(1341), Q(1331), Q(311))
.clearAnswer(Q(1341), Q(1331), Q(311));   

//*******************************
// SPEED  - End
//*******************************




//*******************************
// ACCURACY - Begin
//*******************************

// If QID 971 is answered Option [1 OR 3], then disappear and clear answer to QID 981.
ifQ(971)
.answered(1,3)
.disappear(Q(981))
.clearAnswer(Q(981));

// If QID 991 is answered Option 1, then disappear and clear answer to QID 1011.
ifQ(991)
.answered(1)
.disappear(Q(1011))
.clearAnswer(Q(1011));

// If QID 1001 is answered Option 1, then disappear and clear answer to QID 1141.
ifQ(1001)
.answered(1)
.disappear(Q(1141))
.clearAnswer(Q(1141));

//*******************************
// ACCURACY  - End
//*******************************




//*******************************
// SHIFT MANAGEMENT - Begin
//*******************************

// If QID 1611 is answered Option [1, 2, 3, AND 4], then set value to Option [1, 2, 3, 4, AND 5] to QID 1611.
ifQ(1611)
.answered([1,2,3,4])
.setValue(Q(1611), 1,2,3,4,5);

//*******************************
// SHIFT MANAGEMENT  - End
//*******************************




//====================
// BADGE - Overall Score Calc
//====================


// Curb Appeal


// QID 1181 -- Yes
ifQ(1181)
.answered(1)
.setValue(Q(1691), '3');

// QID 1181 -- No
ifQ(1181)
.answered(2)
.setValue(Q(1691), '0');

// QID 1181 -- N/A, not answered
ifQ(1181)
.answered(3)
.orQ(1181)
.notAnswered()
.clearAnswer(Q(1691));


// QID 1191 -- Yes
ifQ(1191)
.answered(1)
.setValue(Q(1701), '3');

// QID 1191 -- No
ifQ(1191)
.answered(2)
.setValue(Q(1701), '0');

// QID 1191 -- not answered
ifQ(1191)
.notAnswered()
.clearAnswer(Q(1701));


// Curb Appeal section score
ifQ()
.sum(Q(1691), Q(1701))
.store(Q(1771));

ifQ(1771)
.answered()
.divide(Q(1771), 14)
.store(Q(1771));

ifQ(1771)
.answered()
.multiply(Q(1771), 100)
.store(Q(1771));



// Cleanliness


// QID 1361 -- Yes
ifQ(1361)
.answered(1)
.setValue(Q(1871), '3');

// QID 1361 -- No
ifQ(1361)
.answered(2)
.setValue(Q(1871), '0');

// QID 1361 -- not answered
ifQ(1361)
.notAnswered()
.clearAnswer(Q(1871));


// QID 1501 -- Option 1 OR Option 2
ifQ(1501)
.answered(1,2)
.setValue(Q(1881), '2');

// QID 1501 -- Option 1 AND Option 2
ifQ(1501)
.answered([1,2])
.setValue(Q(1881), '4');

// QID 1501 -- none of the above
ifQ(1501)
.answered(3)
.setValue(Q(1881), '0');

// QID 1501 -- not answered
ifQ(1501)
.notAnswered()
.clearAnswer(Q(1881));



// QID 1601
ifQ()
.setValue(Q(1901), 10);

//
ifQ(1601)
.notAnswered(1)
.sub(Q(1901), 2)
.store(Q(1901));

//
ifQ(1601)
.notAnswered(2)
.sub(Q(1901), 2)
.store(Q(1901));

//
ifQ(1601)
.notAnswered(3)
.sub(Q(1901), 2)
.store(Q(1901));

//
ifQ(1601)
.notAnswered(4)
.sub(Q(1901), 2)
.store(Q(1901));

//
ifQ(1601)
.notAnswered(5)
.sub(Q(1901), 2)
.store(Q(1901));

//
ifQ(1601)
.notAnswered([1,2,3,4,5])
.setValue(Q(1901), '0');

//
ifQ(1591)
.answered(0,2,3)
.andQ(1601)
.notAnswered([1,2,3,4,5])
.clearAnswer(Q(1901));



// Cleanliness section score
ifQ()
.sum(Q(1871), Q(1881), Q(1891), Q(1901))
.store(Q(1861));

ifQ(1861)
.answered()
.divide(Q(1861), 14)
.store(Q(1861));

ifQ(1861)
.answered()
.multiply(Q(1861), 100)
.store(Q(1861));
